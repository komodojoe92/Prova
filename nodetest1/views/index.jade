doctype html
html
  head
    title Kaleidomics
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js')
    script(src='http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js')
    script(src='https://cdn.datatables.net/1.10.7/js/jquery.dataTables.min.js')
    script(src='https://cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.js')
    script(src='https://www.google.com/jsapi')
    script.
      var tagList=[];   //lista dei tag che vengono selezionati
      var searchCamp="";    //stringa di ricerca data in input

      $(document).ready(function() {    //contata il server e rstituisce il vettore dei tag IN JSON, per ciascun tag crea un bottone all'interno di #listingTag_Body
        $.getJSON('http://blackarachnia.ingm.ad:49161/tags', function(data){
          $.each(data, function(index,value){
            $("<div class=\"btn btn-default\" id=\""+ value +"\" style=\"margin-bottom:12px;margin-left:12px;\" onclick=\"selectionTag(id)\">" + value +"</div>").appendTo('#listingTag_Body');
          })
        })
      });

      function deleteTag(idBtn){    //quando clicco su un bottone già selezionato oppure cancello una voce dalla lista tag con l'apposito bottone, cancella la voce da tagList e il bottone viene deselezionato
      $('#line_'+ idBtn.split("_")[1]).remove();
      $('#'+idBtn.split("_")[1]).css("background-color", "");
      tagList.splice(tagList.indexOf(idBtn.split("_")[1]),tagList.indexOf(idBtn.split("_")[1])+1);
      }
      
      function sendList(){    //setta tutte le variabili utili alla funzione e svuota tutti i campi in Result
        searchCamp="";
        var string="";
        $('#sectionResult_body_Tab').empty();
        $('#sectionResult_body_Content').empty();
        $('#SelectedFile_Body').empty();
        if ($('#globalSearchForm').val() != ""){    //controlla che ci sia una stringa in input
          var inputSplit = $('#globalSearchForm').val().split(" ");    //divide le singole voci della stringa in input
          $.each(inputSplit, function(){    //per ogni parola valida (diversa dalla stringa vuota) crea il formato da inviare al server
            if (this != ""){
              searchCamp += this + '%20';
            }
          })
          searchCamp = searchCamp.substring(0,searchCamp.length-3);
        }
        else{   //qual'ora non ci sia una stringa in input genera un alert e termina la funzione
          alert("input errato!");
          return;
        }   //a seconda della presenza o meno dei tag cambia la richiesta al server
        if((tagList.length == undefined) || (tagList.length == 0)){   //controlla se sono stati selezionati dei tag oppure se il vettore dei tag è stato svuotato.
          string = "/keys/"+searchCamp;
          $.getJSON('http://blackarachnia.ingm.ad:49161'+string, function(data){
          showTableChart(data);
          })
        }
        else{
          string = "/tags/";
          $.each(tagList, function(){
            string += this + '%20'    //per ogni tag crea il formato da inviare al server
          })
          string = string.substring(0, string.length-3);
          $.getJSON('http://blackarachnia.ingm.ad:49161'+ string +'/keys/'+ searchCamp, function(data){
          console.log(data);
          showTableChart(data);
          }) 
        }
      }
      //LA FUNZIONE PIU' IMPORTANTE!!!  crea dal file JSON la struttura per creare le diverse tabelle ed i rispettivi chart
      function showTableChart(obj){
        var pippo="";
        var hash = new Object();
        var array;
        if(obj.objs.length == 0){   //se la risposta del server è vuota genera un alert e termina la funzione
          alert('The result is empty! try with other tag(s)');
          return;
        }
        for (i=0 ; i<obj.gen_infos.nres ; i++){   //controllo il filepath di ogni objs all'interno del JSON e per ciuscuno creo una key nell'oggetto obj 
          if(hash[obj.objs[i].infos.filepath] == undefined){ 
            hash[obj.objs[i].infos.filepath] = new Array();   //ad ogni key dell'oggetto obj associa un array di array corrispondenti alle righe della tabella
          }
          array = new Array();
          for(j=0 ; j<obj.objs[i].infos.header.length ; j++){   //legge ogni elemento, a cui accede con il nome della colonna della table, e lo aggiunge all'array
            if(array[obj.objs[i].infos.header[j]] == undefined || array[obj.objs[i].infos.header[j]] != 0){
              array.push(obj.objs[i].data[obj.objs[i].infos.header[j]]);
            }
          }
          hash[obj.objs[i].infos.filepath].push(array);   //quando a finito di popolare l'array lo inserisce all'array referenziato alla key
        }
        var count = 0;
        var papa = new Array();
        for(i=0 ; i<Object.keys(hash).length ; i++){    //per ogni key dell'oggetto obj crea un array di array in cui va a creare la struttura da inviare a DataTable() per creare gli indici di colonna
          pippo = new Array();
          for(j=0 ; j<obj.gen_infos.nres ; j++){
           if(obj.objs[j].infos.filepath == Object.keys(hash)[i]){
              for(k=0 ; k<obj.objs[j].infos.header.length ; k++){
                pippo.push({"title": obj.objs[j].infos.header[k]});   //struttura titoli di colonna
              }
              papa.push(pippo);
              break;    //evita di ripetere inutilmente la creazione degli indici di colonna della tabella
            }
          }
          //per ogni tabella creata, genera un TAB e delle finestre ad esso associate, negli id è stato inserito un numero identificativo (count) 
          if(count == 0){   
            $("<li class=\"active text-center\"><a href=\"#sectionResult_body_Content_"+count+"\" data-toggle=\"tab\" id=\"#sectionResult_body_Content_"+count+"\" onclick=\"switchContent(id)\">"+count+"</a></li>").appendTo('#sectionResult_body_Tab');
            $("<div class=\"tab-pane fade in active\" id=\"sectionResult_body_Content_"+count+"\"></div>").appendTo('#sectionResult_body_Content');
          }
          else{
            $("<li class=\"text-center\"><a href=\"#sectionResult_body_Content_"+count+"\" data-toggle=\"tab\" id=\"#sectionResult_body_Content_"+count+"\" onclick=\"switchContent(id)\">"+count+"</a></li>").appendTo('#sectionResult_body_Tab');
            $("<div class=\"tab-pane fade in\" id=\"sectionResult_body_Content_"+count+"\"></div>").appendTo('#sectionResult_body_Content');
          }
          $("<div id=\"table_"+count+"\" class=\"myTable\"></div>").appendTo('#sectionResult_body_Content_'+count);   //div per la table
          $("<div id=\"chart_"+count+"\" class=\"myChart\"></div>").appendTo('#sectionResult_body_Content_'+count);   //div per il chart
          $("<div id=\"indexColumn_"+count+"\" class=\"myIndexColumn\"></div>").appendTo(SelectedFile_Body);  //div per gli indici
          for(index=0 ; index<papa[count].length ; index++){    //per ogni indice di colonna crea un lista di checkbox per selezionare le colonne da visualizzare nella tabella
            $("<label class=\"checkbox\"><p><input type=\"checkbox\" id=\"indexColumn"+count+"_"+papa[count][index]['title']+"\">"+papa[count][index]['title']+"</label>").appendTo('#indexColumn_'+count);
          }
          if(count!=0){   //nasconde le div degli indici di colonna da non visualizzare immediatamente
            $('#indexColumn_'+count).hide();
            
          }
          //crea la table 
          $("<table border=\"3\" class=\"table table-striped table-condensed\" id=\"example"+ count +"\"></table>").appendTo('#table_'+count);
          $('#example'+count).dataTable({
            "data": hash[Object.keys(hash)[count]],
            "columns": papa[count],
          });
          count++;
        }
        //controlla ciascun contenuto della prima riga della tabella è se non è un numero controlla che l'indice di riga contenga o meno una determina stringa, utile poi a creare il chart
        var arrayNaN=[];
        var supportoNaN=[];
        var indexGene=[];
        var rows=[];
        var charts=[];
        var dati=[];
        for(i=0 ; i<papa.length ; i++){
          arrayNaN=[];
          for(k=0 ; k<hash[Object.keys(hash)[i]][0].length ; k++){
            supportoNaN=[];
            if((isNaN(Number(hash[Object.keys(hash)[i]][0][k]))) && (papa[i][k]['title'].search("_short_name")==-1)){
              supportoNaN.push(k);
            }
            else if((isNaN(Number(hash[Object.keys(hash)[i]][0][k]))) && (papa[i][k]['title'].search("_short_name")!=-1)){
              indexGene[i] = k;
            }
            if((isNaN(Number(hash[Object.keys(hash)[i]][0][k]))) && (papa[i][k]['title'].search("_symbol")==-1)){
              supportoNaN.push(k);
            }
            else if((isNaN(Number(hash[Object.keys(hash)[i]][0][k]))) && (papa[i][k]['title'].search("_symbol")!=-1)){
              indexGene[i] = k;
            }
          }
          arrayNaN.push(supportoNaN); 
        }  
        google.load('visualization', '1', {packages: ['corechart', 'bar']});
        google.setOnLoadCallback(drawCharts);  

        $('.myChart').hide();
        $('.myTable').show();
        $('a[href="#Result"]').tab('show');
      }

      function drawCharts(){  //viene chiamata solo alla fine dell'esecuzione di tutta la funzione
        for(i=0 ; i<papa.length ; i++){
          if(indexGene[i] != undefined){
            dati[i] = new google.visualization.DataTable();
            dati[i].addColumn('string', String(papa[i][indexGene[i]]['title'])); 
            
            for(j=0 ; j<papa[i].length ; j++){  
              if((arrayNaN[0].indexOf(j)==-1) && (papa[i][j]['title'].search("_short_name")==-1)){
                dati[i].addColumn('number', String(papa[i][j]['title']));
              }
              else if((arrayNaN[0].indexOf(j)==-1) && (papa[i][j]['title'].search("_symbol")==-1)){
                dati[i].addColumn('number', String(papa[i][j]['title']));
              }
            }

            for(j=0 ; j<hash[Object.keys(hash)[i]].length ; j++){
              rows=[];
              rows.push(hash[Object.keys(hash)[i]][j][indexGene[i]]);
              for(k=0 ; k<hash[Object.keys(hash)[i]][j].length ; k++){
                if((arrayNaN[0].indexOf(k)==-1) && (papa[i][k]['title'].search("_short_name")==-1)){
                  rows.push(Number(hash[Object.keys(hash)[i]][j][k]));
                }
                else if((arrayNaN[0].indexOf(k)==-1) && (papa[i][k]['title'].search("_symbol")==-1)){
                  rows.push(Number(hash[Object.keys(hash)[i]][j][k]));
                }
              }
              dati[i].addRow(rows);
            }

            var options = {
              height: 300,
              width: 600,     
            };
            
            charts[i] = new google.charts.Bar(document.getElementById('chart_'+i));
            charts[i].draw(dati[i], options);
            console.log('i='+i+' chart made!');
          }
          else{ //se indexGene[i] è undefined
            console.log('i='+i+' chart Not made!');
            $("<p>NoChart!</p>").appendTo('#chart_'+i);
          }
        }
      }

      function selectionTag(id){
        if (tagList.indexOf(id)==-1){ //se l'id del bottone non è già presente in tagList, viene cambiato il background del bottone e viene aggiunto l'id alla varibaile, inoltre viene creata la riga nella tabella in SelectedTag
          document.getElementById(id).style.background="#ADFF2F";
          tagList.push(id);
          $('#SelectedTag_Body_TableBody').append("<tr id=\"line_"+ id +"\"><td>" + id + "</td><td><div class=\"btn btn-xs btn-danger\" id=\"deleteBtn_" + id +"\" onclick=\"deleteTag(id)\">X</div></td></tr>");
        }
        else{ //se l'id è presente nella varibaile, viene rimossa la riga, viene tolto l'id dalla varibaile tagList e ristabilito in background
          $('#line_'+ id).remove();
          $('#'+id).css("background-color", "");
          tagList.splice(tagList.indexOf(id),tagList.indexOf(id)+1);
        }
      }
      //cambia la vista da tabelle a chart
      function switchTableChart(id){
        var str = id.substring(id.length-5, id.length); //l'id dei bottoni che chiamano la funzione differiscono solo nelle ultime 5 lettere 'table' o 'chart'
        $(id).class="active";
        if(str == 'table'){
          $('.myChart').hide();
          $('.myTable').show();
        }
        else{
          $('.myTable').hide();
          $('.myChart').show();
        }
      }
      //mostra gli indici di colonna della tabella corrente
      function switchContent(id){
        var index = id.substring(id.length-1,id.length);
        $('.myIndexColumn').hide();
        $('#indexColumn_'+index).show();
      }
  body
    nav#navBar.navbar.navbar-default(role='navigation')
      .navbar-header
        a.navbar-brand(href='#') Kaleidomics
      div
        ul.nav.navbar-nav.col-lg-10
          form.navbar-form(role='search', style='margin-left:25%;')
            #globalSearch.form-search
              input#globalSearchForm.form-control(type='search', placeholder='Enter for search', style='width:500px;')
              button#globalSearchButton.btn.btn-primary(style='margin-left:5px;' type='button' onclick='sendList()') Enter
    .container
      .container-flued
        ul#sectionTab.nav.nav-tabs.nav-justified(style='background-color:#E4E5E0;')
          li.active.text-center
            a(href='#Data', data-toggle='tab', style='font-size:large;')
              .glyphicon.glyphicon-search  Data
          li.text-center
            a(href='#Result', data-toggle='tab', style='font-size:large;')
              .glyphicon.glyphicon-share  Result
          li.text-center
            a(href='#GenomeBrowser', data-toggle='tab', style='font-size:large;')
              .glyphicon.glyphicon-globe  GenomeBrowser
        p
        .container-flued
          .container-flued(style='height:450px;')
            .tab-content
              #Data.tab-pane.fade.in.active
                .row
                  .col-lg-8
                    #listingTag.panel.panel-default(style='height:493px;')
                      #listingTag_header.panel-heading(style='height:40px;')
                        strong ListingTag
                      #listingTag_Body.panel-body
                  .col-lg-4
                    #SelectedTag.panel.panel-default(style='height:493px; overflow:auto')
                      #SelectedTag_header.panel-heading(style='height:40px;')
                        strong SelectedTag
                      #SelectedTag_Body.panel-body
                        .container-flued
                          table#SelectedTag_Body_Table.table.table-striped.table-condensed
                            thead
                              tr
                                th TagName
                            tbody#SelectedTag_Body_TableBody
              #GenomeBrowser.tab-pane.fade
              #Result.tab-pane.fade
                .row
                  .col-lg-10
                    #sectionResult.panel.panel-default
                      #sectionResult_header.panel-heading(style='height:50px;')
                        .row
                          .col-lg-6
                            ul.list-inline
                              li
                                #sectionResult_header_instruments.dropdown
                                  button#sectionResult_header_instrumentsButton.btn.btn-default.btn-sm.dropdown-toggle(type='button', data-toggle='dropdown')
                                    | Instruments
                                    span.caret
                                  ul#sectionResult_header_instrumentsMenu.dropdown-menu(role='menu')
                              li
                                #sectionResult_header_displays.dropdown
                                  button#sectionResult_header_displaysButton.btn.btn-default.btn-sm.dropdown-toggle(type='button', data-toggle='dropdown')
                                    | Displays
                                    span.caret
                                  ul#sectionResult_header_displaysMenu.dropdown-menu(role='menu')
                          .col-lg-4
                          .col-lg-2
                            button#sectionResult_header_switchSection_table.btn.btn-default.btn-sm(data-toggle='tab' onclick='switchTableChart(id)') Table
                            button#sectionResult_header_switchSection_chart.btn.btn-default.btn-sm(data-toggle='tab' onclick='switchTableChart(id)') Chart
                      #sectionResult_body.panel-body
                        .container-flued
                          ul#sectionResult_body_Tab.nav.nav-tabs.nav-justified
                          p
                          #sectionResult_body_Content.tab-content(style='height:360px;overflow:auto;')
                  .col-lg-2
                    #SelectedFile.panel.panel-default
                      #SelectedFile_header.panel-heading(style='height:40px;')
                        strong SelectedFile
                      #SelectedFile_Body.panel-body(style='height:450px; overflow:auto;')
